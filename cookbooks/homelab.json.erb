<%=
require 'json'

raise RuntimeError, 'environment variable SECRETS_FILE is required' if ENV['SECRETS_FILE'].nil? || ENV['SECRETS_FILE'].empty?

JSON.parse(File.read(ENV['SECRETS_FILE'])).merge({
  configs: {
    global: {
      tmp_path: '/tmp',
      systemd_unit_path: '/etc/systemd/system',
      local_bin_path: '/usr/local/bin',
      mount_path: '/mnt'
    },
    homelab: {
      config_path: '/srv/homelab',
    },
    docker: {
      project_name: 'docker',
      yml_filename: 'docker-compose.yml',
      yml_path: '/srv/docker',
      hook_path: '/srv/docker/hooks',
      scripts_path: '/srv/docker',
    },
    certsync: {
      username: 'certsync',
      groupname: 'certsync',
      uid: 1001,
      gid: 1001,
      tarball_name: 'le-certs.tgz',
      remote_server: 'comet.odios.us',
      unpack_path: '/tmp/le-certs',
      deploy_path: '/etc/nginx/certs',
      remote_path: '/home/certsync',
    },
    certwarn: {
      warn_days: 7,
      cert_path: '/etc/nginx/certs'
    },
    backup: {
      dest_path: '/mnt/backup',
      staging_path: '/opt/volume-backup',
      git_repo: 'git@gitlab.cr.imson.co:cr.imson.co/homelab.git',
    },
    mount: {
      samba_credentials_path: '/etc/samba/credentials',
      target_server: 'neutron.cr.imson.co',
    },
    nginx: {
      root_path: '/etc/nginx',
      certs_path: '/etc/nginx/certs',
      vhost_path: '/etc/nginx/vhost.d',
      htpasswd_path: '/etc/nginx/htpasswd',
      html_path: '/srv/html',
    },
    homer: {
      root_path: '/srv/homer',
    },
    homelab_proxy: {
      config_path: '/srv/proxy'
    }
  }
}).to_json
%>
